/*
 * This file is generated by jOOQ.
*/
package com.emu.apps.bookmarks.services.jooq.tables.records;


import com.emu.apps.bookmarks.services.jooq.tables.Bookmark;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarkRecord extends UpdatableRecordImpl<BookmarkRecord> implements Record12<Long, String, String, String, Boolean, Integer, Long, Timestamp, Timestamp, String, Timestamp, String> {

    private static final long serialVersionUID = 691849521;

    /**
     * Setter for <code>public.bookmark.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bookmark.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.bookmark.uuid</code>.
     */
    public void setUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bookmark.uuid</code>.
     */
    public String getUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.bookmark.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.bookmark.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.bookmark.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.bookmark.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.bookmark.favorite</code>.
     */
    public void setFavorite(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.bookmark.favorite</code>.
     */
    public Boolean getFavorite() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.bookmark.rate</code>.
     */
    public void setRate(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.bookmark.rate</code>.
     */
    public Integer getRate() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.bookmark.version</code>.
     */
    public void setVersion(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.bookmark.version</code>.
     */
    public Long getVersion() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.bookmark.date_archive</code>.
     */
    public void setDateArchive(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.bookmark.date_archive</code>.
     */
    public Timestamp getDateArchive() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>public.bookmark.date_creation</code>.
     */
    public void setDateCreation(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.bookmark.date_creation</code>.
     */
    public Timestamp getDateCreation() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>public.bookmark.user_creation</code>.
     */
    public void setUserCreation(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.bookmark.user_creation</code>.
     */
    public String getUserCreation() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.bookmark.date_modification</code>.
     */
    public void setDateModification(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.bookmark.date_modification</code>.
     */
    public Timestamp getDateModification() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>public.bookmark.user_modification</code>.
     */
    public void setUserModification(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.bookmark.user_modification</code>.
     */
    public String getUserModification() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, String, String, String, Boolean, Integer, Long, Timestamp, Timestamp, String, Timestamp, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, String, String, String, Boolean, Integer, Long, Timestamp, Timestamp, String, Timestamp, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Bookmark.BOOKMARK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Bookmark.BOOKMARK.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Bookmark.BOOKMARK.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Bookmark.BOOKMARK.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Bookmark.BOOKMARK.FAVORITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Bookmark.BOOKMARK.RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Bookmark.BOOKMARK.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Bookmark.BOOKMARK.DATE_ARCHIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Bookmark.BOOKMARK.DATE_CREATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Bookmark.BOOKMARK.USER_CREATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Bookmark.BOOKMARK.DATE_MODIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Bookmark.BOOKMARK.USER_MODIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getFavorite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getDateArchive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getUserCreation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getUserModification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getFavorite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getDateArchive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getUserCreation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getUserModification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value2(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value3(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value5(Boolean value) {
        setFavorite(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value6(Integer value) {
        setRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value7(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value8(Timestamp value) {
        setDateArchive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value9(Timestamp value) {
        setDateCreation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value10(String value) {
        setUserCreation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value11(Timestamp value) {
        setDateModification(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value12(String value) {
        setUserModification(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord values(Long value1, String value2, String value3, String value4, Boolean value5, Integer value6, Long value7, Timestamp value8, Timestamp value9, String value10, Timestamp value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarkRecord
     */
    public BookmarkRecord() {
        super(Bookmark.BOOKMARK);
    }

    /**
     * Create a detached, initialised BookmarkRecord
     */
    public BookmarkRecord(Long id, String uuid, String url, String description, Boolean favorite, Integer rate, Long version, Timestamp dateArchive, Timestamp dateCreation, String userCreation, Timestamp dateModification, String userModification) {
        super(Bookmark.BOOKMARK);

        set(0, id);
        set(1, uuid);
        set(2, url);
        set(3, description);
        set(4, favorite);
        set(5, rate);
        set(6, version);
        set(7, dateArchive);
        set(8, dateCreation);
        set(9, userCreation);
        set(10, dateModification);
        set(11, userModification);
    }
}
